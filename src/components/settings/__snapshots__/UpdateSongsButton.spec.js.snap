// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components:settings:UpdateSongsButton when songs are loading renders UpdateSongsButton 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "borderWidth": 0,
      "height": 60,
      "justifyContent": "center",
    }
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "color": "#222",
        "fontSize": 18,
      }
    }
  >
    Päivitä laulut
  </Text>
  <View
    style={
      Object {
        "bottom": 13.5,
        "position": "absolute",
        "right": 0,
        "width": 70,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel="Päivitä laulut"
      accessibilityTraits={
        Array [
          "button",
          "disabled",
        ]
      }
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#0C42FD",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
              Object {
                "color": "#9EB741",
              },
              Object {
                "color": "#cdcdcd",
              },
            ]
          }
        >
          Päivitä
        </Text>
      </View>
    </View>
  </View>
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    supportedOrientations={
      Array [
        "landscape",
        "portrait",
      ]
    }
    transparent={true}
    visible={true}
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "backgroundColor": "rgba(0, 0, 0, 0.25)",
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <ActivityIndicator
          animating={true}
          color="white"
          hidesWhenStopped={true}
          size="large"
          style={
            Object {
              "flex": 1,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "bottom": 0,
              "flex": 1,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "fontSize": 20,
                  "fontWeight": "bold",
                  "height": 50,
                  "top": 80,
                },
                undefined,
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`components:settings:UpdateSongsButton when songs are not loading renders UpdateSongsButton 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "borderWidth": 0,
      "height": 60,
      "justifyContent": "center",
    }
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "color": "#222",
        "fontSize": 18,
      }
    }
  >
    Päivitä laulut
  </Text>
  <View
    style={
      Object {
        "bottom": 13.5,
        "position": "absolute",
        "right": 0,
        "width": 70,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel="Päivitä laulut"
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#0C42FD",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
              Object {
                "color": "#9EB741",
              },
            ]
          }
        >
          Päivitä
        </Text>
      </View>
    </View>
  </View>
  <View />
</View>
`;
